package templates

import "fmt"
import "zenoforge.com/goLiveNotif/models"
import "strconv"

func ColorIntToHex(colorInt int) string {
	return fmt.Sprintf("#%06X", colorInt)
}

templ PostModal(postItem models.Post, modalTitle string) {
	<div class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full flex justify-center items-center" id="editModal">
		<div class="bg-white p-5 rounded-lg shadow-lg w-full max-w-2xl">
			<form
				id="editForm"
				class="space-y-4"
				if postItem.Template {
					hx-put="/template"
				} else {
					hx-put={ fmt.Sprintf("/post/%s", postItem.ID) }
					hx-target="#postList"
					hx-swap="outerHTML"
				}
				enctype="multipart/form-data"
			>
				<div class="flex justify-between items-center mb-4">
					<h2 class="text-xl font-semibold">{ modalTitle }</h2>
					<div>
						<label for="schedule" class="block text-sm font-medium text-gray-700 mr-2">Schedule</label>
						<input type="datetime-local" id="scheduleInput" name="scheduleInput" value={ postItem.ScheduleAt.Format("2006-01-02T15:04") } class="mt-1 border border-gray-300 rounded-md shadow-sm py-2 px-3 text-sm leading-tight focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"/>
					</div>
				</div>
				<div>
					<label for="title" class="block text-sm font-medium text-gray-700">Title</label>
					<input type="text" name="titleInput" id="titleInput" value={ postItem.Message.Embed[0].Title } class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" placeholder="Enter title"/>
				</div>
				<div>
					<label for="description" class="block text-sm font-medium text-gray-700">Description</label>
					<textarea name="descriptionInput" id="descriptionInput" rows="3" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" placeholder="Enter description">{ postItem.Message.Embed[0].Description }</textarea>
				</div>
				<!-- Image Upload Field -->
				<div class="hidden relative mt-2 group" id="image-preview-group">
					<img id="image-preview" src={ postItem.Message.Embed[0].Image.URL } class="rounded-lg"/>
					<button id="imgUploadBtn" type="button" class="absolute top-0 right-12 m-2 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded opacity-0 group-hover:opacity-100">
						<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4-4m0 0l-4 4m4-4v12"></path>
						</svg>
					</button>
					<button id="imgDelete" type="button" class="absolute top-0 right-0 m-2 bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded opacity-0 group-hover:opacity-100">
						X
					</button>
				</div>
				<div id="dropArea" class="mt-2 flex justify-center rounded-lg border border-dashed border-gray-900/25 px-6 py-10">
					<div class="text-center">
						<svg class="mx-auto h-12 w-12 text-gray-300" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true">
							<path fill-rule="evenodd" d="M1.5 6a2.25 2.25 0 012.25-2.25h16.5A2.25 2.25 0 0122.5 6v12a2.25 2.25 0 01-2.25 2.25H3.75A2.25 2.25 0 011.5 18V6zM3 16.06V18c0 .414.336.75.75.75h16.5A.75.75 0 0021 18v-1.94l-2.69-2.689a1.5 1.5 0 00-2.12 0l-.88.879.97.97a.75.75 0 11-1.06 1.06l-5.16-5.159a1.5 1.5 0 00-2.12 0L3 16.061zm10.125-7.81a1.125 1.125 0 112.25 0 1.125 1.125 0 01-2.25 0z" clip-rule="evenodd"></path>
						</svg>
						<div class="mt-4 flex text-sm leading-6 text-gray-600">
							<label for="imageUpload" class="relative cursor-pointer rounded-md bg-white font-semibold text-indigo-600 focus-within:outline-none focus-within:ring-2 focus-within:ring-indigo-600 focus-within:ring-offset-2 hover:text-indigo-500">
								<span>Upload Image</span>
								<input id="imageUpload" name="imageUpload" type="file" class="sr-only"/>
								<input id="imageURLInput" name="imageURLInput" value={ postItem.Message.Embed[0].Image.URL } class="hidden"/>
							</label>
							<p class="pl-1">or drag and drop</p>
						</div>
						<p class="text-xs leading-5 text-gray-600">PNG, JPG</p>
					</div>
				</div>
				<div class="mt-4">
					<button type="button" id="advancedToggle" class="py-2 px-4 bg-gray-200 text-gray-700 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">Advanced</button>
				</div>
				<!-- Advanced Fields (initially hidden) -->
				<div id="advancedFields" class="hidden space-y-4 mt-4">
					<div>
						<label for="content" class="block text-sm font-medium text-gray-700">Content</label>
						<input type="text" name="contentInput" id="contentInput" value={ postItem.Message.Content } class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" placeholder="Enter Content"/>
					</div>
					<!-- URL Field -->
					<div>
						<label for="url" class="block text-sm font-medium text-gray-700">Title URL</label>
						<input type="text" name="urlInput" id="urlInput" value={ postItem.Message.Embed[0].URL } class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" placeholder="Enter URL"/>
					</div>
					<!-- Color Picker -->
					<div>
						<label for="color" class="block text-sm font-medium text-gray-700">Color</label>
						<input type="color" id="colorPicker" value={ ColorIntToHex(postItem.Message.Embed[0].Color) } class="w-16 h-10 border-gray-300 rounded-md shadow-sm focus:border-indigo-500 focus:ring-indigo-500"/>
						<input id="colorInput" name="colorInput" value={ strconv.Itoa(postItem.Message.Embed[0].Color) } class="hidden"/>
					</div>
					<!-- Thumbnail URL Field -->
					<div>
						<label for="thumbImgUpload" class="block text-sm font-medium text-gray-700">Thumbnail Image</label>
						<input type="text" name="thumbnailInput" id="thumbnailInput" value={ postItem.Message.Embed[0].Thumbnail.URL } class="hidden"/>
						<input type="file" name="thumbImgUpload" id="thumbImgUpload"/>
					</div>
					<!-- Footer Icon URL Field -->
					<div>
						<label for="footerIconUrl" class="block text-sm font-medium text-gray-700">Footer Icon URL</label>
						<input type="text" name="footerIconInput" id="footerIconInput" value={ postItem.Message.Embed[0].Footer.IconURL } class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" placeholder="Enter Footer Icon URL"/>
					</div>
					<!-- Footer Text Field -->
					<div class="pb-2">
						<label for="footerText" class="block text-sm font-medium text-gray-700">Footer Text</label>
						<input type="text" name="footerTextInput" id="footerTextInput" value={ postItem.Message.Embed[0].Footer.Text } class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" placeholder="Enter Footer Text"/>
					</div>
				</div>
				<div class="flex justify-end space-x-2">
					<button type="button" id="cancelButton" class="py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">Cancel</button>
					<button type="submit" class="py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">Save</button>
				</div>
			</form>
			<!-- Preview Section -->
			<div class="flex items-center mb-2">
				<input id="togglePreviewCheckbox" type="checkbox" class="w-4 h-4 text-indigo-600 border-gray-300 rounded focus:ring-indigo-500" unchecked/>
				<label for="togglePreviewCheckbox" class="ml-2 block text-sm font-medium text-gray-700">Discord Preview:</label>
			</div>
			<article id="discordPreview" class="hidden max-w-md mx-auto mt-8">
				<div class="max-w-md mx-auto mt-8" style="border-color: hsla(261, 43.2%, 44.9%, 1); max-width: 432px;">
					<div class="p-4 rounded-lg" style="background: var(--background-secondary, #36393f); border-left: 4px solid var(--background-tertiary, #36393f);">
						<div class="flex p-0.5">
							<!-- Column for Title and Description -->
							<div class="p-1 flex-grow">
								<h3 id="previewTitle" class="text-sm font-bold text-blue-400 pb-1">{ postItem.Message.Embed[0].Title }</h3>
								<p id="previewDesc" class="text-xs text-white pt-1">{ postItem.Message.Embed[0].Description }</p>
							</div>
							<!-- Column for Thumbnail -->
							<div class="flex-shrink-0">
								<img id="previewThumbnail" class="w-16 h-16 rounded-lg" src={ postItem.Message.Embed[0].Thumbnail.URL } alt="Thumbnail"/>
							</div>
						</div>
						<!-- Large Image -->
						<img id="previewImage" class="rounded-lg mt-2" src={ postItem.Message.Embed[0].Image.URL }/>
						<!-- Footer -->
						<div class="flex items-center mt-4">
							<img id="prevFootIcon" class="h-4 w-4" src={ postItem.Message.Embed[0].Footer.IconURL } alt=""/>
							<span id="prevFootText" class="text-xs ml-2 text-white">{ postItem.Message.Embed[0].Footer.Text }</span>
						</div>
					</div>
				</div>
			</article>
			<script src="/static/scripts/editModal.js"></script>
			<script src="/static/scripts/dragDrop.js"></script>
		</div>
	</div>
}
